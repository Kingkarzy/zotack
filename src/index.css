@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap');

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  border: 0;
  outline: 0;
  text-decoration: none;
  list-style: none;
  box-sizing: border-box;
  font-family: 'Poppins', sans-serif;
}

:root {
  --primary-hue: 210;
  --gray-hue: 240;
  --color-primary: hsl(var(--primary-hue), 100%, 50%);
  --color-primary-variant: hsl(var(--primary-hue), 100%, 65%);
  --color-secondary: #ffb116;
  --color-gray-100: hsl(var(--gray-hue), 47%, 94%);
  --color-gray-200: hsl(var(--gray-hue), 26%, 75%);
  --color-gray-300: hsl(var(--gray-hue), 24%, 64%);
  --color-gray-400: hsl(var(--gray-hue), 16%, 41%);
  --color-gray-500: hsl(var(--gray-hue), 44%, 25%);
  --color-gray-600: hsl(var(--gray-hue), 48%, 15%);
  --color-success: #00bf8e;
  --color-warning: #f7c94b;
  --color-danger: #f75842;
  --color-danger-variant: rgba(247, 88, 66, 0.4);
  --color-white: #fff;
  --color-light: rgba(255, 255, 255, 0.7);
  --color-black: #000;
  --color-bg: #1f2641;
  --color-bg1: #2e3267;
  --color-bg2: #424890;

  /* new update */

  --dark-color: #635bff;
  --light-color: #80e9ff;

  /* new update  ends*/

  --container-width-lg: 80%;
  --container-width-md: 90%;
  --container-width-sm: 94%;

  --transition: all 500ms ease;
}

body {
  font-family: 'Montserrat', sans-serif;
  /* font-family: 'Poppins', sans-serif; */
  line-height: 1.7;
  color: var(--color-gray-200);
  background: var(--color-gray-600);
  /* background: var(--color-white); */
  overflow-x: hidden;
}

.container {
  width: var(--container-width-lg);
  max-width: 1920px;
  margin-inline: auto;
}

section {
  /* margin-top: 10rem; */
  padding: 6rem 0;
  box-shadow: 0 0.2rem 0.4rem rgba(0, 0, 0, 0.2);
}

header {
  box-shadow: 0 0.2rem 0.4rem rgba(0, 0, 0, 0.2);
}

section h2 {
  text-align: center;
  margin-bottom: 4rem;
  color: var(--color-gray-200);
}
section h5 {
  text-align: center;
  color: var(--color-gray-200);
}

h1,
h2,
h3,
h4,
h5 {
  line-height: 1.2;
  color: var(--color-gray-100);
}

h1 {
  font-size: 2.5rem;
}

h2 {
  font-size: 2rem;
}

h3 {
  font-size: 1.6rem;
}

h4 {
  font-size: 1.3rem;
}

a {
  color: var(--color-gray-100);
}

img {
  width: 100%;
  display: block;
  object-fit: cover;
}

.btn {
  display: inline-block;
  background: var(--color-primary);
  color: var(--color-gray-100);
  padding: 1rem 2rem;
  border: 1px solid transparent;
  border-radius: 1rem;
  font-weight: 500;
  transition: var(--transition);
  width: max-content;
  margin: 0 auto;
}

.btn:hover {
  background: transparent;
  color: var(--color-white);
  border-color: var(--color-white);
}

.btn-primary {
  background: var(--color-secondary);
  color: var(--color-gray-600);
}

.btn.lg {
  padding: 1.2rem 3rem;
  border-radius: 2rem;
  font-size: 1.1rem;
}

.btn.sm {
  padding: 0.4rem 1.2rem;
  font-size: 0.9rem;
}

.btn.sm:hover {
  background: var(--color-gray-100);
}

.card {
  background-color: var(--color-gray-500);
  border: 2px solid transparent;
  text-align: center;
  padding: 3rem 2rem;
  border-radius: 0 3rem 0 3rem;
  transition: var(--transition);
}

.card:hover {
  background: transparent;
  border-color: var(--color-gray-400);
  cursor: default;
}

.card span {
  width: 3rem;
  height: 3rem;
  background: var(--color-primary);
  color: var(--color-gray-100);
  font-size: 1.5rem;
  padding: 0.8rem;
  display: grid;
  place-items: center;
  margin-bottom: 1.5rem;
  margin-inline: auto;
  border-radius: 1rem;
  transition: var(--transition);
}

.card:hover span {
  background: var(--color-secondary);
  color: var(--color-gray-600);
}

.card small {
  margin-top: 1rem;
  display: block;
  font-weight: 300;
}
form {
  display: flex;
  flex-direction: column;
  gap: 1.2rem;
}

input {
  width: 100%;
  padding: 1.5rem;
  border-radius: 0.5rem;
  border: 2px solid var(--color-primary-variant);
  background: transparent;
  resize: none;
  color: var(--color-white);
}
input.submit {
  cursor: pointer;
}

/* SVG */
#myWidget {
  animation: fadeIn 1s;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(20%);
  }
  to {
    opaacity: 1;
    transform: translateY(0);
  }
}

#puzzles path {
  opacity: 0;
  animation: grow 8s ease forwards infinite;
  animation-delay: calc(var(--order) * 200ms);
}

#bug {
  animation: move 10s linear infinite;
}

@keyframes grow {
  20% {
    opacity: 0;
    transform: translateX(-1%);
  }
  30%,
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes move {
  0% {
    transform: rotate(0deg);
  }
  20% {
    transform: rotate(-10deg);
  }
  30% {
    transform: translate(30%);
  }
  50% {
    transform: rotate(-50deg);
  }
  100% {
    transform: rotate(-90deg);
  }
}

#gear1,
#gear,
#reactBody {
  animation: spin 2s linear infinite;
  /* transform-origin: 50% 50%; */
  transform-box: fill-box;
  transform-origin: center;
  position: absolute;
}
#gear2 {
  animation: reverseSpin 2s linear infinite;
  /* transform-origin: 50% 50%; */
  transform-box: fill-box;
  transform-origin: center;
  position: absolute;
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  50% {
    transform: rotate(180deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes reverseSpin {
  0% {
    transform: rotate(0deg);
  }
  50% {
    transform: rotate(-180deg);
  }
  100% {
    transform: rotate(-360deg);
  }
}

#roboEyes {
  animation: blink 5s ease infinite;
}

@keyframes blink {
  0% {
    opacity: 0;
  }
  50% {
    opacity: 1;
    width: var(--container-width-md);
  }
  100% {
    opacity: 0.4;
  }
}

.surround {
  animation: bounce 8s ease forwards infinite;
  animation-delay: calc(var(--bouncer) * 200ms);
}

@keyframes bounce {
  0% {
    transform: translateY(-4%);
  }
  50% {
    transform: translateY(4%);
  }
  100% {
    transform: translateY(-4%);
  }
}

#darkGroup {
  fill: var(--dark-color);
}
#lightGroup {
  fill: var(--light-color);
}
#dark1,
#dark2,
#light1 {
  width: 200px;
  transition: var(--transition);
}
#dark1 {
  transform: translateX(-100%);
}
svg:hover #light1 {
  transform: translateX(-20%);
}
svg:hover #dark2 {
  transform: translateX(40%);
  opacity: 0;
}
svg:hover #dark1 {
  transform: translateX(0%);
}

/* ============= MEDIA QUERIES (TABLETS) ============== */
@media screen and (max-width: 1024px) {
  svg {
    width: var(--container-width-sm);
  }

  .container {
    width: var(--container-width-md);
  }

  h1 {
    font-size: 2rem;
  }

  h2 {
    font-size: 1.6rem;
  }

  h3 {
    font-size: 1.4rem;
  }

  h4 {
    font-size: 1.2rem;
  }

  .footer__container {
    grid-template-columns: 1fr 1fr;
  }
}

/* ============= MEDIA QUERIES (PHONES) ============== */
@media screen and (max-width: 600px) {
  /* 1 */

  .container {
    width: var(--container-width-sm);
  }
}
